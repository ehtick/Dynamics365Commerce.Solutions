/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { buildMockModuleProps } from '@msdyn365-commerce/core';
import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { render } from 'enzyme';
import * as React from 'react';

import { IAccordionExpandedState } from '../../../actions/accordion-state/accordion-state';
import AccordionItem from '../accordion-item';
import { IAccordionItemData } from '../accordion-item.data';
import { IAccordionItemConfig, IAccordionItemProps } from '../accordion-item.props.autogenerated';
import AccordionItemView from '../accordion-item.view';

const mockData: IAccordionItemData = {
    accordionExpandedState: wrapInResolvedAsyncResult({ isAllExpanded: false } as IAccordionExpandedState)
};

const mockConfig: IAccordionItemConfig = {
    accordionItemTitle: 'Accordion Item Title',
    isExpandedOnInitialLoad: false
};

const myReactNodeChild1: React.ReactNode = 'whatever child module 1';
const slots = {
    accordionItemContent: [myReactNodeChild1]
};

const mockActions = {};

describe('AccordionItem', () => {
    it('renders correctly', () => {
        let moduleProps: IAccordionItemProps<IAccordionItemData>;
        moduleProps = {
            ...(buildMockModuleProps(mockData, mockActions, mockConfig) as IAccordionItemProps<IAccordionItemData>),
            slots,

            // @ts-expect-error
            renderView: AccordionItemView
        };
        const component = render(<AccordionItem {...moduleProps} />);
        expect(component).toMatchSnapshot();
    });
});
