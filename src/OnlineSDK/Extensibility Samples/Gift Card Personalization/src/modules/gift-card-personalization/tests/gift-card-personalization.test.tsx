/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { buildMockModuleProps } from '@msdyn365-commerce/core-internal';
import { ICheckoutState } from '@msdyn365-commerce/global-state';
/// <reference types="jest" />

import * as React from 'react';
import * as renderer from 'react-test-renderer';

import { AsyncResult, Cart } from '@msdyn365-commerce/retail-proxy';

import GiftCardPersonalization from '../gift-card-personalization';
import { IGiftCardPersonalizationData } from '../gift-card-personalization.data';
import { IGiftCardPersonalizationConfig, IGiftCardPersonalizationProps } from '../gift-card-personalization.props.autogenerated';

const mockNormalCart: Cart = {
    Id: 'y~Yb7eYcPZtD0P6bqOPxH4219bYskaf~',
    CartLines: [
        {
            LineId: '1',
            FulfillmentStoreId: 'SANJOSE',
            DeliveryMode: '60',
            PickupTimeslotStartDateTime: new Date('2020-09-01T01:00:00Z'),
            PickupTimeslotEndDateTime: new Date('2020-09-01T02:00:00Z'),
            ProductId: 101
        },
        {
            LineId: '2',
            FulfillmentStoreId: 'SANJOSE',
            PickupTimeslotStartDateTime: new Date('2020-09-01T01:00:00Z'),
            PickupTimeslotEndDateTime: new Date('2020-09-01T02:00:00Z'),
            DeliveryMode: '60',
            ProductId: 102
        }
    ]
};

const mockData: IGiftCardPersonalizationData = {
    checkout: {
        status: 'SUCCESS',
        result: {
            checkoutCart: {
                cart: mockNormalCart
            }
        }
    } as AsyncResult<ICheckoutState>
};

const mockConfig: IGiftCardPersonalizationConfig = {};

const mockActions = {};

describe('GiftCardPersonalization', () => {
    let moduleProps: IGiftCardPersonalizationProps<IGiftCardPersonalizationData>;
    beforeAll(() => {
        moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig) as IGiftCardPersonalizationProps<
            IGiftCardPersonalizationData
        >;
    });
    it('renders correctly', () => {
        // @ts-expect-error
        const component: renderer.ReactTestRenderer = renderer.create(<GiftCardPersonalization {...moduleProps} />);
        const tree: renderer.ReactTestRendererJSON | renderer.ReactTestRendererJSON[] | null = component.toJSON();
        expect(tree).toMatchSnapshot();
    });
});
