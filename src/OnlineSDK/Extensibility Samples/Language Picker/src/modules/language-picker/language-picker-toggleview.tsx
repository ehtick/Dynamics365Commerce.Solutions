/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import React from 'react';
import { ILanguagePickerViewProps } from './language-picker';
import { ILanguagesData } from './language-picker.props.autogenerated';

export default (props: ILanguagePickerViewProps) => {
    const languages = props.config.languages;
    let baseUrl = props.config.linkBaseUrl;
    const currentUrl = props.context.request.url.requestUrl.href;
    let currentLocale = '';
    let otherLanguage: ILanguagesData | undefined;

    if (!baseUrl?.endsWith('/')) {
        baseUrl = `${baseUrl}/`;
    }

    let option = null;
    languages!.forEach((item, i) => {
        const index = currentUrl.indexOf(`/${item.code}/`);
        let startIndex = 0;
        let localeCodeLen = 0;
        // adding condition for home page since it can end with /en and no trailng slash
        if (index === -1 && currentUrl.endsWith(`/${item.code}`)) {
            startIndex = currentUrl.indexOf(`/${item.code}`) + 1;
            currentLocale = currentUrl.substring(startIndex, startIndex + item.code.length);
        }
        if (index > -1) {
            startIndex = index + 1;
            localeCodeLen = item.code.length;
            currentLocale = currentUrl.substring(startIndex, startIndex + localeCodeLen);
        }
        // looks for current locale in the url or default to arabic(or any language)
        if (currentLocale.indexOf('ar') > -1) {
            otherLanguage = languages!.find(language => language.code.indexOf('en') > -1);
        } else if (currentLocale.indexOf('en') > -1) {
            otherLanguage = languages!.find(language => language.code.indexOf('ar') > -1);
        } else if (currentLocale === '') {
            otherLanguage = languages!.find(language => language.code.indexOf('ar') > -1);
        }

        const code = otherLanguage?.code.substr(0, 2);

        option = (
            <span
                className={`ms-language-picker__list__item`}
                key={otherLanguage?.name}
                role='menuitem'
                id={otherLanguage?.code}
                onClick={props.onChange}
            >
                {code}
            </span>
        );
    });

    return (
        <div>
            <div className='ms-language-picker'>{option}</div>
        </div>
    );
};
