/*!
 * Copyright (c) Microsoft Corporation.
 * All rights reserved. See LICENSE in the project root for license information.
 */

import { buildMockModuleProps } from '@msdyn365-commerce/core-internal';
import { wrapInResolvedAsyncResult } from '@msdyn365-commerce-modules/retail-actions';
import { render } from 'enzyme';
import * as React from 'react';

import { IPopUpState } from '../actions';
import { IPopUpViewProps } from '../pop-up';
import { IPopUpData } from '../pop-up.data';
import { IPopUpConfig, IPopUpProps } from '../pop-up.props.autogenerated';
import PopUpView from '../pop-up.view';

const mockData: IPopUpData = {
    popUpState: wrapInResolvedAsyncResult({
        isOpen: true
    } as IPopUpState)
};

const mockConfig: IPopUpConfig = {
    heading: 'Subscribe'
};

const mockActions = {};

describe('PopUpView', () => {
    let moduleProps: IPopUpProps<IPopUpData>;

    it('renders correctly', () => {
        moduleProps = buildMockModuleProps(mockData, mockActions, mockConfig) as IPopUpProps<IPopUpData>;
        const mockProps: IPopUpViewProps = {
            ...moduleProps,
            headerContainerProps: {
                className: ''
            },
            headerProps: undefined,
            bodyContainerProps: {
                className: ''
            },
            bodyContent: <div />,
            className: '',
            onDismiss: jest.fn(),
            moduleProps: {
                moduleProps,
                className: '',
                autoFocus: true,
                fade: true,
                isOpen: true
            }
        };
        const component = render(<PopUpView {...mockProps} />);
        expect(component).toMatchSnapshot();
    });
});
